/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/YTM0YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnSEFBK0MiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWdlbmVyYXRvci1ydW50aW1lXCIpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "./resources/js/AdminService.js":
/*!**************************************!*\
  !*** ./resources/js/AdminService.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _HelperService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HelperService */ \"./resources/js/HelperService.js\");\n/* harmony import */ var _HttpService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HttpService */ \"./resources/js/HttpService.js\");\n/**\n * adding a new pricing data\n */\n\n\n$(document).on(\"click\", \"#btn-submit-user-create\", function (e) {\n  var elem = e.target;\n  var password = document.querySelector('#password');\n  var confirm = document.querySelector('#password_confirmation');\n  var email = document.querySelector('#email');\n  var username = document.querySelector('#username');\n  var name = document.querySelector('#name');\n\n  if (password.value !== confirm.value) {\n    return (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.SwalAlert)('Error', 'Password and confirm do not match', 'error');\n  }\n\n  var data = new FormData();\n  data.append('password', password.value);\n  data.append('password_confirmation', confirm.value);\n  data.append('username', username.value);\n  data.append('email', email.value);\n  data.append('name', name.value);\n  var displayErr = document.querySelector(\".display_err\");\n  elem.disabled = true;\n  (0,_HttpService__WEBPACK_IMPORTED_MODULE_1__.postData)(data, '/admin', 'POST').then(function (data) {\n    elem.disabled = false;\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.httpResponseCreateOrUpdateData)(data, displayErr);\n  }, function (error) {\n    console.log(error);\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.genericErrorResponse)();\n  });\n});\n$(document).on('click', '.delete-user', function (e) {\n  var elem = e.target;\n  var displayErr = document.querySelector(\".display_err\");\n  elem.disabled = true;\n  (0,_HttpService__WEBPACK_IMPORTED_MODULE_1__.deleteData)('/admin/' + elem.getAttribute('data-delete-id')).then(function (data) {\n    elem.disabled = false;\n    var ResBool = (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.httpResponseCreateOrUpdateData)(data, displayErr);\n\n    if (ResBool == true) {\n      (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.reloadSamepage)(100);\n    }\n  }, function (error) {\n    console.log(error);\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.genericErrorResponse)();\n  });\n});\n$(document).on(\"click\", \"#btn-submit-user-edit\", function (e) {\n  var elem = e.target;\n  var name = document.querySelector('#name');\n  var fileUpload = document.querySelector('#img-profile');\n  var bio = document.querySelector('#bio-edit');\n  var contentEditId = document.querySelector(\"#content-edit-id\");\n  var data = new FormData();\n  data.append('name', name.value);\n  fileUpload.value !== '' ? data.append('file', fileUpload.files[0]) : '';\n  data.append('bio', bio.value);\n  var displayErr = document.querySelector(\".display_err\");\n  elem.disabled = true;\n  (0,_HttpService__WEBPACK_IMPORTED_MODULE_1__.postData)(data, '/admin/' + contentEditId.value + '/?_method=PATCH', 'POST').then(function (data) {\n    elem.disabled = false;\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.httpResponseCreateOrUpdateData)(data, displayErr);\n  }, function (error) {\n    console.log(error);\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.genericErrorResponse)();\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/AdminService.js\n");

/***/ }),

/***/ "./resources/js/FileService.js":
/*!*************************************!*\
  !*** ./resources/js/FileService.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getBase64\": () => (/* binding */ getBase64),\n/* harmony export */   \"getExtension\": () => (/* binding */ getExtension),\n/* harmony export */   \"isImage\": () => (/* binding */ isImage),\n/* harmony export */   \"isVideo\": () => (/* binding */ isVideo)\n/* harmony export */ });\nvar getBase64 = function getBase64(file, callback) {\n  var reader = new FileReader();\n  reader.addEventListener('load', function () {\n    return callback(reader.result);\n  });\n  reader.readAsDataURL(file);\n};\n/**\n * get file extension\n */\n\nvar getExtension = function getExtension(filename) {\n  var parts = filename.split('.');\n  return parts[parts.length - 1];\n};\n/**\n * check if this file is an image\n */\n\nvar isImage = function isImage(filename) {\n  var ext = getExtension(filename);\n\n  switch (ext.toLowerCase()) {\n    case 'jpg':\n    case 'gif':\n    case 'bmp':\n    case 'png':\n    case 'jpeg':\n      //etc\n      return true;\n  }\n\n  return false;\n};\n/**\n * check if this file is a video\n */\n\nvar isVideo = function isVideo(filename) {\n  var ext = getExtension(filename);\n\n  switch (ext.toLowerCase()) {\n    case 'm4v':\n    case 'avi':\n    case 'mpg':\n    case 'mp4':\n      // etc\n      return true;\n  }\n\n  return false;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvRmlsZVNlcnZpY2UuanM/Nzk3NCJdLCJuYW1lcyI6WyJnZXRCYXNlNjQiLCJmaWxlIiwiY2FsbGJhY2siLCJyZWFkZXIiLCJGaWxlUmVhZGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlc3VsdCIsInJlYWRBc0RhdGFVUkwiLCJnZXRFeHRlbnNpb24iLCJmaWxlbmFtZSIsInBhcnRzIiwic3BsaXQiLCJsZW5ndGgiLCJpc0ltYWdlIiwiZXh0IiwidG9Mb3dlckNhc2UiLCJpc1ZpZGVvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU8sSUFBTUEsU0FBUyxHQUFHLFNBQVpBLFNBQVksQ0FBQ0MsSUFBRCxFQUFNQyxRQUFOLEVBQW1CO0FBQ3hDLE1BQU1DLE1BQU0sR0FBRyxJQUFJQyxVQUFKLEVBQWY7QUFDQUQsUUFBTSxDQUFDRSxnQkFBUCxDQUF3QixNQUF4QixFQUErQjtBQUFBLFdBQUlILFFBQVEsQ0FBQ0MsTUFBTSxDQUFDRyxNQUFSLENBQVo7QUFBQSxHQUEvQjtBQUNBSCxRQUFNLENBQUNJLGFBQVAsQ0FBcUJOLElBQXJCO0FBQ0gsQ0FKTTtBQU1QO0FBQ0E7QUFDQTs7QUFDTyxJQUFNTyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFDQyxRQUFELEVBQWE7QUFDckMsTUFBSUMsS0FBSyxHQUFHRCxRQUFRLENBQUNFLEtBQVQsQ0FBZSxHQUFmLENBQVo7QUFDQSxTQUFPRCxLQUFLLENBQUNBLEtBQUssQ0FBQ0UsTUFBTixHQUFlLENBQWhCLENBQVo7QUFDSCxDQUhNO0FBSVA7QUFDQTtBQUNBOztBQUVPLElBQU1DLE9BQU8sR0FBRyxTQUFWQSxPQUFVLENBQUNKLFFBQUQsRUFBWTtBQUMvQixNQUFJSyxHQUFHLEdBQUdOLFlBQVksQ0FBQ0MsUUFBRCxDQUF0Qjs7QUFDQSxVQUFRSyxHQUFHLENBQUNDLFdBQUosRUFBUjtBQUNJLFNBQUssS0FBTDtBQUNBLFNBQUssS0FBTDtBQUNBLFNBQUssS0FBTDtBQUNBLFNBQUssS0FBTDtBQUNBLFNBQUssTUFBTDtBQUNJO0FBQ0EsYUFBTyxJQUFQO0FBUFI7O0FBU0EsU0FBTyxLQUFQO0FBQ0gsQ0FaTTtBQWFQO0FBQ0E7QUFDQTs7QUFDTyxJQUFPQyxPQUFPLEdBQUcsU0FBVkEsT0FBVSxDQUFDUCxRQUFELEVBQWE7QUFDakMsTUFBSUssR0FBRyxHQUFHTixZQUFZLENBQUNDLFFBQUQsQ0FBdEI7O0FBQ0EsVUFBUUssR0FBRyxDQUFDQyxXQUFKLEVBQVI7QUFDSSxTQUFLLEtBQUw7QUFDQSxTQUFLLEtBQUw7QUFDQSxTQUFLLEtBQUw7QUFDQSxTQUFLLEtBQUw7QUFDSTtBQUNBLGFBQU8sSUFBUDtBQU5SOztBQVFBLFNBQU8sS0FBUDtBQUNILENBWE0iLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvRmlsZVNlcnZpY2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZ2V0QmFzZTY0ID0gKGZpbGUsY2FsbGJhY2spID0+IHtcbiAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgIHJlYWRlci5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywoKT0+Y2FsbGJhY2socmVhZGVyLnJlc3VsdCkpO1xuICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpO1xufVxuXG4vKipcbiAqIGdldCBmaWxlIGV4dGVuc2lvblxuICovXG5leHBvcnQgY29uc3QgZ2V0RXh0ZW5zaW9uID0gKGZpbGVuYW1lKT0+IHtcbiAgICB2YXIgcGFydHMgPSBmaWxlbmFtZS5zcGxpdCgnLicpO1xuICAgIHJldHVybiBwYXJ0c1twYXJ0cy5sZW5ndGggLSAxXTtcbn1cbi8qKlxuICogY2hlY2sgaWYgdGhpcyBmaWxlIGlzIGFuIGltYWdlXG4gKi9cblxuZXhwb3J0IGNvbnN0IGlzSW1hZ2UgPSAoZmlsZW5hbWUpPT57XG4gICAgdmFyIGV4dCA9IGdldEV4dGVuc2lvbihmaWxlbmFtZSk7XG4gICAgc3dpdGNoIChleHQudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICBjYXNlICdqcGcnOlxuICAgICAgICBjYXNlICdnaWYnOlxuICAgICAgICBjYXNlICdibXAnOlxuICAgICAgICBjYXNlICdwbmcnOlxuICAgICAgICBjYXNlICdqcGVnJzpcbiAgICAgICAgICAgIC8vZXRjXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLyoqXG4gKiBjaGVjayBpZiB0aGlzIGZpbGUgaXMgYSB2aWRlb1xuICovXG5leHBvcnQgY29uc3QgIGlzVmlkZW8gPSAoZmlsZW5hbWUpID0+e1xuICAgIHZhciBleHQgPSBnZXRFeHRlbnNpb24oZmlsZW5hbWUpO1xuICAgIHN3aXRjaCAoZXh0LnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgY2FzZSAnbTR2JzpcbiAgICAgICAgY2FzZSAnYXZpJzpcbiAgICAgICAgY2FzZSAnbXBnJzpcbiAgICAgICAgY2FzZSAnbXA0JzpcbiAgICAgICAgICAgIC8vIGV0Y1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/FileService.js\n");

/***/ }),

/***/ "./resources/js/HelperService.js":
/*!***************************************!*\
  !*** ./resources/js/HelperService.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"textInputLimiter\": () => (/* binding */ textInputLimiter),\n/* harmony export */   \"reloadSamepage\": () => (/* binding */ reloadSamepage),\n/* harmony export */   \"hex2rgb\": () => (/* binding */ hex2rgb),\n/* harmony export */   \"errorMessage\": () => (/* binding */ errorMessage),\n/* harmony export */   \"displayErrorMessages\": () => (/* binding */ displayErrorMessages),\n/* harmony export */   \"httpResponseCreateOrUpdateData\": () => (/* binding */ httpResponseCreateOrUpdateData),\n/* harmony export */   \"genericErrorResponse\": () => (/* binding */ genericErrorResponse),\n/* harmony export */   \"deleteSuccessResponse\": () => (/* binding */ deleteSuccessResponse),\n/* harmony export */   \"SwalAlert\": () => (/* binding */ SwalAlert),\n/* harmony export */   \"imgCheckWidthHeight\": () => (/* binding */ imgCheckWidthHeight)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar textInputLimiter = function textInputLimiter(contentId, counter, thisObject) {\n  var valueLength = thisObject.val().length;\n\n  if (valueLength == 0) {\n    $(contentId).text(\"Characters left: \" + (counter - thisObject.val().length));\n  } else {\n    $(contentId).text(\"Characters left: \" + (counter - thisObject.val().length));\n  }\n};\nvar reloadSamepage = function reloadSamepage(timeout) {\n  setTimeout(function () {\n    location.reload();\n  }, timeout);\n};\nvar hex2rgb = function hex2rgb(hex, opacity) {\n  var h = hex.replace('#', '');\n  h = h.match(new RegExp('(.{' + h.length / 3 + '})', 'g'));\n\n  for (var i = 0; i < h.length; i++) {\n    h[i] = parseInt(h[i].length == 1 ? h[i] + h[i] : h[i], 16);\n  }\n\n  if (typeof opacity != 'undefined') h.push(opacity);\n  return 'rgba(' + h.join(',') + ')';\n};\nvar errorMessage = function errorMessage(dataObject) {\n  var str = '';\n\n  for (var objects in dataObject) {\n    if (typeof dataObject[objects][0] == 'string') {\n      str += '<div class=\"alert alert-danger add-padding\">' + ' ' + dataObject[objects][0] + '</div>';\n    } else {\n      str += '<div class=\"alert alert-danger add-padding\">' + ' ' + (dataObject[objects][0] + '</div>');\n    }\n  }\n\n  return str;\n};\nvar displayErrorMessages = function displayErrorMessages(errorResponse, displayErr) {\n  var lengthErrObject = Object.keys(errorResponse).length;\n\n  if (lengthErrObject > 0) {\n    var err = errorMessage(errorResponse);\n    displayErr.innerHTML = err;\n  }\n};\nvar httpResponseCreateOrUpdateData = function httpResponseCreateOrUpdateData(data, displayErr) {\n  if (data.success == false && data.hasOwnProperty(\"error\")) {\n    var _errorMessage = data.error;\n    displayErrorMessages(_errorMessage, displayErr);\n    return false;\n  } else if (data.success == false && !data.hasOwnProperty('error')) {\n    if (data.message == 'Unauthenticated') {\n      window.location = \"/login\";\n    } else {\n      swal(data.message);\n      return false;\n    }\n\n    swal(data.message);\n  } else if (data.success == true) {\n    swal(data.message);\n    displayErr.innerHTML = '';\n    return true; // reloadSamepage(1000);\n  }\n\n  $(\".large-spinner\").hide();\n  swal(data.message);\n};\nvar genericErrorResponse = function genericErrorResponse() {\n  $(\".large-spinner\").hide();\n  swal(\"there seems to be a problem please refresh your browser\");\n};\nvar deleteSuccessResponse = function deleteSuccessResponse(data, timeIntervalPageRefresh) {\n  if (data.success == true) {\n    $(\".large-spinner\").hide();\n    swal(data.message);\n    reloadSamepage(timeIntervalPageRefresh);\n  }\n\n  swal(data.message);\n};\nvar SwalAlert = function SwalAlert(title, text, icon) {\n  return swal({\n    title: title,\n    text: text,\n    icon: icon,\n    button: true\n  });\n};\nvar imgCheckWidthHeight = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(file, imgSrc, prevSrc) {\n    var img, returnValue, width;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            img = new Image();\n            returnValue = false;\n            width = 0;\n            img.src = window.URL.createObjectURL(file.files[0]);\n\n            img.onload = function () {\n              if (img.width < 100 || img.height < 100) {\n                file.value = \"\";\n                imgSrc.src = \"\";\n                imgSrc.src = prevSrc;\n                return SwalAlert('invalid file', 'this image width or height is less than 100 only images with with and height above 100 are allowed', 'error');\n              }\n            };\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function imgCheckWidthHeight(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/HelperService.js\n");

/***/ }),

/***/ "./resources/js/HttpService.js":
/*!*************************************!*\
  !*** ./resources/js/HttpService.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"postData\": () => (/* binding */ postData),\n/* harmony export */   \"deleteData\": () => (/* binding */ deleteData),\n/* harmony export */   \"getData\": () => (/* binding */ getData)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar postData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee(formData, added_url, method) {\n    var requestOptions;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            requestOptions = {\n              headers: {\n                'X-CSRF-Token': $('meta[name=_token]').attr('content')\n              },\n              method: method,\n              body: formData\n            };\n            _context.next = 3;\n            return fetch(added_url, requestOptions).then(function (response) {\n              console.log(response);\n              return response.json();\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function postData(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar deleteData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee2(addedUrl) {\n    var requestOptions;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            requestOptions = {\n              headers: {\n                'X-CSRF-Token': $('meta[name=_token]').attr('content')\n              },\n              method: 'DELETE'\n            };\n            _context2.next = 3;\n            return fetch(addedUrl, requestOptions).then(function (response) {\n              console.log(response);\n              return response.json();\n            });\n\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function deleteData(_x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar getData = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark(function _callee3(added_url) {\n    var requestOptions;\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            requestOptions = {\n              headers: {\n                'X-CSRF-Token': $('meta[name=_token]').attr('content')\n              },\n              method: 'GET'\n            };\n            _context3.next = 3;\n            return fetch(added_url, requestOptions).then(function (response) {\n              return response.json();\n            });\n\n          case 3:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getData(_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvSHR0cFNlcnZpY2UuanM/ZGUyMCJdLCJuYW1lcyI6WyJwb3N0RGF0YSIsImZvcm1EYXRhIiwiYWRkZWRfdXJsIiwibWV0aG9kIiwicmVxdWVzdE9wdGlvbnMiLCJoZWFkZXJzIiwiJCIsImF0dHIiLCJib2R5IiwiZmV0Y2giLCJ0aGVuIiwicmVzcG9uc2UiLCJjb25zb2xlIiwibG9nIiwianNvbiIsImRlbGV0ZURhdGEiLCJhZGRlZFVybCIsImdldERhdGEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQ08sSUFBTUEsUUFBUTtBQUFBLG9IQUFHLGlCQUFNQyxRQUFOLEVBQWdCQyxTQUFoQixFQUEwQkMsTUFBMUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2hCQywwQkFEZ0IsR0FDRTtBQUNsQkMscUJBQU8sRUFBQztBQUNKLGdDQUFnQkMsQ0FBQyxDQUFDLG1CQUFELENBQUQsQ0FBdUJDLElBQXZCLENBQTRCLFNBQTVCO0FBRFosZUFEVTtBQUlsQkosb0JBQU0sRUFBRUEsTUFKVTtBQUtsQkssa0JBQUksRUFBRVA7QUFMWSxhQURGO0FBQUE7QUFBQSxtQkFVUFEsS0FBSyxDQUFDUCxTQUFELEVBQVlFLGNBQVosQ0FBTCxDQUFpQ00sSUFBakMsQ0FDVCxVQUFBQyxRQUFRLEVBQUU7QUFDTkMscUJBQU8sQ0FBQ0MsR0FBUixDQUFZRixRQUFaO0FBQ0EscUJBQVFBLFFBQVEsQ0FBQ0csSUFBVCxFQUFSO0FBQ0gsYUFKUSxDQVZPOztBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBSDs7QUFBQSxrQkFBUmQsUUFBUTtBQUFBO0FBQUE7QUFBQSxHQUFkO0FBbUJBLElBQU1lLFVBQVU7QUFBQSxxSEFBRyxrQkFBTUMsUUFBTjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFbEJaLDBCQUZrQixHQUVBO0FBQ2xCQyxxQkFBTyxFQUFDO0FBQ0osZ0NBQWdCQyxDQUFDLENBQUMsbUJBQUQsQ0FBRCxDQUF1QkMsSUFBdkIsQ0FBNEIsU0FBNUI7QUFEWixlQURVO0FBSWxCSixvQkFBTSxFQUFFO0FBSlUsYUFGQTtBQUFBO0FBQUEsbUJBU1RNLEtBQUssQ0FBQ08sUUFBRCxFQUFXWixjQUFYLENBQUwsQ0FBZ0NNLElBQWhDLENBQ1QsVUFBQUMsUUFBUSxFQUFFO0FBQ05DLHFCQUFPLENBQUNDLEdBQVIsQ0FBWUYsUUFBWjtBQUNBLHFCQUFRQSxRQUFRLENBQUNHLElBQVQsRUFBUjtBQUNILGFBSlEsQ0FUUzs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQVZDLFVBQVU7QUFBQTtBQUFBO0FBQUEsR0FBaEI7QUFrQkEsSUFBTUUsT0FBTztBQUFBLHFIQUFHLGtCQUFNZixTQUFOO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVmRSwwQkFGZSxHQUVFO0FBQ2pCQyxxQkFBTyxFQUFDO0FBQ0osZ0NBQWdCQyxDQUFDLENBQUMsbUJBQUQsQ0FBRCxDQUF1QkMsSUFBdkIsQ0FBNEIsU0FBNUI7QUFEWixlQURTO0FBSWpCSixvQkFBTSxFQUFFO0FBSlMsYUFGRjtBQUFBO0FBQUEsbUJBU05NLEtBQUssQ0FBQ1AsU0FBRCxFQUFZRSxjQUFaLENBQUwsQ0FBaUNNLElBQWpDLENBQ1QsVUFBQUMsUUFBUTtBQUFBLHFCQUFFQSxRQUFRLENBQUNHLElBQVQsRUFBRjtBQUFBLGFBREMsQ0FUTTs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUg7O0FBQUEsa0JBQVBHLE9BQU87QUFBQTtBQUFBO0FBQUEsR0FBYiIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9IdHRwU2VydmljZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IGNvbnN0IHBvc3REYXRhID0gYXN5bmMoZm9ybURhdGEgLGFkZGVkX3VybCxtZXRob2QpID0+e1xuICAgIGxldCByZXF1ZXN0T3B0aW9ucyA9ICB7XG4gICAgICAgIGhlYWRlcnM6e1xuICAgICAgICAgICAgJ1gtQ1NSRi1Ub2tlbic6ICQoJ21ldGFbbmFtZT1fdG9rZW5dJykuYXR0cignY29udGVudCcpLFxuICAgICAgICB9LFxuICAgICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgICAgYm9keTogZm9ybURhdGFcbiAgICB9XG5cblxuICAgIHJldHVybiBhd2FpdCBmZXRjaChhZGRlZF91cmwsIHJlcXVlc3RPcHRpb25zKS50aGVuKFxuICAgICAgICByZXNwb25zZT0+e1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpXG4gICAgICAgICAgICByZXR1cm4gIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgfVxuICAgIClcbn1cblxuXG5leHBvcnQgY29uc3QgZGVsZXRlRGF0YSA9IGFzeW5jKGFkZGVkVXJsKSA9Plxue1xuICAgIGxldCByZXF1ZXN0T3B0aW9ucyA9ICB7XG4gICAgICAgIGhlYWRlcnM6e1xuICAgICAgICAgICAgJ1gtQ1NSRi1Ub2tlbic6ICQoJ21ldGFbbmFtZT1fdG9rZW5dJykuYXR0cignY29udGVudCcpLFxuICAgICAgICB9LFxuICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgIH1cblxuICAgIHJldHVybiBhd2FpdCBmZXRjaChhZGRlZFVybCwgcmVxdWVzdE9wdGlvbnMpLnRoZW4oXG4gICAgICAgIHJlc3BvbnNlPT57XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSlcbiAgICAgICAgICAgIHJldHVybiAgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICB9XG4gICAgKVxufVxuXG5cbmV4cG9ydCBjb25zdCBnZXREYXRhID0gYXN5bmMoYWRkZWRfdXJsKSA9PntcblxuICAgIGxldCByZXF1ZXN0T3B0aW9ucyA9IHtcbiAgICAgICAgaGVhZGVyczp7XG4gICAgICAgICAgICAnWC1DU1JGLVRva2VuJzogJCgnbWV0YVtuYW1lPV90b2tlbl0nKS5hdHRyKCdjb250ZW50JyksXG4gICAgICAgIH0sXG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgfVxuXG4gICAgcmV0dXJuIGF3YWl0IGZldGNoKGFkZGVkX3VybCwgcmVxdWVzdE9wdGlvbnMpLnRoZW4oXG4gICAgICAgIHJlc3BvbnNlPT5yZXNwb25zZS5qc29uKCkpO1xufVxuXG5cblxuXG5cblxuXG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/HttpService.js\n");

/***/ }),

/***/ "./resources/js/ProfileService.js":
/*!****************************************!*\
  !*** ./resources/js/ProfileService.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _HelperService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HelperService */ \"./resources/js/HelperService.js\");\n/* harmony import */ var _FileService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FileService */ \"./resources/js/FileService.js\");\n/* harmony import */ var _HttpService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./HttpService */ \"./resources/js/HttpService.js\");\n/**\n * adding a new pricing data\n */\n\n\n\n$(document).on(\"change\", \"#img-profile\", function (e) {\n  var fileUpload = document.querySelector('#img-profile');\n  var imgSrc = document.querySelector('.img-content');\n  var previousSrc = imgSrc.src;\n\n  if ((0,_FileService__WEBPACK_IMPORTED_MODULE_1__.isImage)(fileUpload.files[0].name) === false) {\n    imgSrc.src = previousSrc;\n    return (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.SwalAlert)('invalid file', 'this is not part of the recommended images jpg, png and jpeg', 'error');\n  }\n\n  (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.imgCheckWidthHeight)(fileUpload, imgSrc, previousSrc);\n  (0,_FileService__WEBPACK_IMPORTED_MODULE_1__.getBase64)(fileUpload.files[0], function (base64String) {\n    imgSrc.src = base64String;\n  });\n});\n$(document).on(\"click\", \"#btn-submit-profile\", function (e) {\n  var elem = e.target;\n  var fileUpload = document.querySelector('#img-profile');\n  var data = new FormData();\n  data.append('file', fileUpload.files[0]);\n  var displayErr = document.querySelector(\".display_err\");\n  elem.disabled = true;\n  (0,_HttpService__WEBPACK_IMPORTED_MODULE_2__.postData)(data, '/panel/profile/edit-profile-picture?_method=PATCH', 'POST').then(function (data) {\n    elem.disabled = false;\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.httpResponseCreateOrUpdateData)(data, displayErr);\n  }, function (error) {\n    console.log(error);\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.genericErrorResponse)();\n  });\n});\n$(document).on(\"click\", \"#btn-submit-bio-data\", function (e) {\n  var elem = e.target;\n  var bioData = document.querySelector('#bio-data-text-area');\n  var data = new FormData();\n  data.append('message', bioData.value);\n  var displayErr = document.querySelector(\".display_err\");\n  elem.disabled = true;\n  (0,_HttpService__WEBPACK_IMPORTED_MODULE_2__.postData)(data, '/panel/profile/edit-bio-message?_method=PATCH', 'POST').then(function (data) {\n    elem.disabled = false;\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.httpResponseCreateOrUpdateData)(data, displayErr);\n  }, function (error) {\n    console.log(error);\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.genericErrorResponse)();\n  });\n});\n$(document).on(\"click\", \"#btn-submit-change-password\", function (e) {\n  var elem = e.target;\n  var password = document.querySelector('#password');\n  var confirm = document.querySelector('#password_confirmation');\n\n  if (password.value !== confirm.value) {\n    return (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.SwalAlert)('Error', 'Password and confirm do not match', 'error');\n  }\n\n  var data = new FormData();\n  data.append('password', password.value);\n  data.append('password_confirmation', confirm.value);\n  var displayErr = document.querySelector(\".display_err\");\n  elem.disabled = true;\n  (0,_HttpService__WEBPACK_IMPORTED_MODULE_2__.postData)(data, '/panel/profile/change-password-action?_method=PATCH', 'POST').then(function (data) {\n    elem.disabled = false;\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.httpResponseCreateOrUpdateData)(data, displayErr);\n  }, function (error) {\n    console.log(error);\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.genericErrorResponse)();\n  });\n});\n$(document).on(\"change\", \".form-check-input\", function (e) {\n  $(\".form-check-input\").prop('checked', false);\n  $(\".form-check-input\").removeClass('elem_checked');\n  $(this).prop('checked', true);\n  e.target.classList.add('elem_checked');\n});\n$(document).on(\"click\", \"#btn-submit-profile-status\", function (e) {\n  var elem = e.target;\n  var data = new FormData();\n  var elemChecked = document.querySelector('.elem_checked');\n  data.append('profile_status', elemChecked.value);\n  var displayErr = document.querySelector(\".display_err\");\n  elem.disabled = true;\n  (0,_HttpService__WEBPACK_IMPORTED_MODULE_2__.postData)(data, '/panel/profile/profile-status-action?_method=PATCH', 'POST').then(function (data) {\n    elem.disabled = false;\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.httpResponseCreateOrUpdateData)(data, displayErr);\n  }, function (error) {\n    console.log(error);\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.genericErrorResponse)();\n  });\n});\n$(document).on(\"click\", \"#follow-user\", function (e) {\n  var elem = e.target;\n  var data = new FormData();\n  data.append('userid', elem.getAttribute('data-user'));\n  var displayErr = document.querySelector(\".display_err\");\n  elem.disabled = true;\n  (0,_HttpService__WEBPACK_IMPORTED_MODULE_2__.postData)(data, '/follow-user', 'POST').then(function (data) {\n    elem.disabled = false;\n    var ResBool = (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.httpResponseCreateOrUpdateData)(data, displayErr);\n\n    if (ResBool == true) {\n      (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.reloadSamepage)(100);\n    }\n  }, function (error) {\n    console.log(error);\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.genericErrorResponse)();\n  });\n});\n$(document).on(\"click\", \"#unfollow-user\", function (e) {\n  var elem = e.target;\n  var displayErr = document.querySelector(\".display_err\");\n  elem.disabled = true;\n  (0,_HttpService__WEBPACK_IMPORTED_MODULE_2__.deleteData)('/unfollow-user/' + elem.getAttribute('data-user')).then(function (data) {\n    elem.disabled = false;\n    var ResBool = (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.httpResponseCreateOrUpdateData)(data, displayErr);\n\n    if (ResBool == true) {\n      (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.reloadSamepage)(100);\n    }\n  }, function (error) {\n    console.log(error);\n    (0,_HelperService__WEBPACK_IMPORTED_MODULE_0__.genericErrorResponse)();\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/ProfileService.js\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : 0\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./resources/js/HttpService.js");
/******/ 	__webpack_require__("./resources/js/HelperService.js");
/******/ 	__webpack_require__("./resources/js/ProfileService.js");
/******/ 	__webpack_require__("./resources/js/FileService.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/AdminService.js");
/******/ 	
/******/ })()
;